- Provide collection traits for arrays                      - done
- Provide collection traits for slices                      - done
- Use the same borrow concept in vector in contains         - done
- Use the same borrow concept in map (value contains)       - done
- Make the modules public                                   - done
- Add Range based methods in Size trait                     - done
- Provide ContainsKey, NotContainsKey in AssertKind         - done
- Add support for string matchers                           - done
- Add support for option matchers                           - done
- Add support for result matchers                           - done
- Add support for char matchers                             - done

- Handle duplication between size trait for map and collection - done
- Handle duplication in collection traits between vector, arrays and slices - done
- Improve panic (AssertKind)                                - done
- Add support for contains all                              - done
- Add support for num matchers                              - done
- Add support for date/time matchers                        - done
- Add support for file path matchers                        - done
- Change names of all traits and matchers                   - done
- Incorporate features for regex, num, date and file        - done

- Should the test in matcher (or its implementation) work over Q, where T: Borrow<Q> for contains
- Take a look at all the messages in MatcherResult

- Add support for eq
- Check all assertions to see the parameter that is being accepted
    - value or reference and see what is being passed to the matcher
- See if assertions can have macros to generate the code
- Check the parameter types of all
    - assertions and
    - matchers

